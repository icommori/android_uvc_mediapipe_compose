/*
 * Copyright 2023 The Innocomm Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *             http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.google.mediapipe.examples.objectdetection'
    compileSdk 34

    defaultConfig {
        applicationId "com.google.mediapipe.examples.objectdetection"
        minSdk 28
        targetSdk 33
        versionCode 2
        versionName "1.0.0.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }
    signingConfigs {

        create("releaseAndDefault") {
            storeFile = file("../androidDefault.jks")
            storePassword = "innocomm"
            keyAlias = "innocomm"
            keyPassword = "innocomm"
            v1SigningEnabled = true
            v2SigningEnabled = true
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig = signingConfigs.getByName("releaseAndDefault")
        }
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig = signingConfigs.getByName("releaseAndDefault")
        }
        // add the code from below line
        applicationVariants.all {
                // this method is use to rename your all apk weather
                // it may be signed or unsigned(debug apk)
            variant ->
                variant.outputs.each {
                        // on below line we are setting
                        // a name to our apk as GFG.apk
                    output ->
                        def newName = output.outputFile.name
                        newName = newName.replace("app-", "UVC_MediaPipeTest_${variant.versionName}_")
                        output.outputFileName = newName
                }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    androidResources {
        noCompress += "tflite"
    }
}

// import DownloadModels task
project.ext.ASSET_DIR = projectDir.toString() + '/src/main/assets'

// Download default models; if you wish to use your own models then
// place them in the "assets" directory and comment out this line.
apply from:'download_models.gradle'

dependencies {
    //ANDROIDUSBCAMERA - CAMERA ENGINE
    implementation 'com.github.jiangdongguo.AndroidUSBCamera:libausbc:3.2.8'

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.8.0')
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.2'
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.navigation:navigation-compose:2.6.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')

    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
    implementation 'com.google.mediapipe:tasks-vision:0.10.14'

    // CameraX core library
    def camerax_version = '1.1.0'
    implementation "androidx.camera:camera-core:$camerax_version"

    // CameraX Camera2 extensions
    implementation "androidx.camera:camera-camera2:$camerax_version"

    // CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:$camerax_version"

    // CameraX View class
    implementation "androidx.camera:camera-view:$camerax_version"

    def accompanistPermissionsVersion = '0.23.1'
    implementation "com.google.accompanist:accompanist-permissions:$accompanistPermissionsVersion"

    //def exoPlayerVersion = "2.18.1"
    //implementation "com.google.android.exoplayer:exoplayer:$exoPlayerVersion"
    implementation('androidx.media3:media3-exoplayer:1.4.0-rc01')
    implementation('androidx.media3:media3-ui:1.4.0-rc01')

}